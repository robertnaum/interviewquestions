1. What is the difference between an abstract class and an interface?
An abstract class is always used as a base class. 
An interface, on the other hand, can declare properties, methods and events only (no access modifiers). The developer must implement all declared members. In short, an interface designates a contract/behavior that implementing classes should have.

2. What is a lambda expression in C#?  What is the lambda operator in C#?
Lambda expressions in C# are used like anonymous functions, with the difference that in Lambda expressions you don't need to specify the type of the value that you input thus making it more flexible to use. 
The '=>' is the lambda operator which is used in all lambda expressions.

3. How do you prevent a class from being inherited?
In VB.NET you use the NotInheritable modifier to prevent programmers from using the class as a base class. In C#, use the sealed keyword.

4. In .NET what is the difference between Overloading and Overriding?
Overloading is when you have multiple methods in the same scope, with the same name but different signatures.
Overriding is a principle that allows you to change the functionality of a method in a child class.

5. What is the difference between DataReader and DataSet?
DataReader - better performance, cannot modify data, read-only
DataSet - modify data, read/write, slower performance

6. For error handling, in a try-catch-finally block, if there’s no error, does the Finally block still execute?
YES

7. What is the role of ConfigureServices and Configure method?
ConfigureServices method is optional and defined inside startup class as mentioned in above code. It gets called by the host before the 'Configure' method to configure the app's services.  
Configure method is used to add middleware components to the IApplicationBuilder instance that's available in Configure method. Configure method also specifies how the app responds to HTTP request and response. ApplicationBuilder instance's 'Use...' extension method is used to add one or more middleware components to request pipeline.

8. What is the difference between NameSpace and Assembly?
A Namespace is a logical naming scheme for types in which a simple type name, such as MyType, is preceded with a dot-separated hierarchical name.  A single assembly may contain types whose hierarchical names have different namespace roots, and a logical namespace root may span multiple assemblies.
Namespace can span multiple assemblies
Namespace can logically groups class
Assembly is a physical grouping of logical units

9. Public is one of 5 access modifiers in .NET. Name any other 2.
Private, Protected, Internal, Protected Internal

10. What is the difference between a Value Type and Reference Type?
A Value Type stores its contents in memory allocated on the stack. 
Reference Types are used by a reference which holds an (address) to the object but not the object itself on the heap.

11. When Services are registered, there is a lifetime for every service. ASP.NET Core provides the following lifetimes...
Transient - Services with transient lifetime are created each time they are requested from service container. So it's best suited for stateless, light weight services.
Scoped - Services with scoped lifetime are created once per connection or client request. When using scoped service in middleware then inject the service via invoke or invokeAsync method. You should not inject the service via constructor injection as it treats the service behavior like Singleton.
Singleton - Service with singleton lifetime is created once when first time the service is requested. For subsequent requests same instance is served by service container.

12. How can a view be shared across multiple controllers?
We can put the view in the “Shared” folder.

13. What is a Generic Type Constraint in .NET? Give an example.
Constraints inform the compiler about the capabilities a type argument must have.
where T: class, where T: struct, where T: interface, where T: new()
public class GenericList<T> where T : Employee

14. Which HTTP status code is sent for all uncaught exceptions? (by default)
500 - Internal Server Error

15. What's the difference between the StringBuilder and String class?  When would you use one or the other?
String is immutable and StringBuilder is mutable. When building a string in multiple steps, use StringBuilder.

16. What is a Tuple?
Data structures that hold object properties and contain a sequence of elements of different data types.

17. What is the difference between asynchronous and synchronous actions? When would you use asynchronous actions?
Asynchronous actions won’t block the executing thread if it waits for an I/O operation. Using asynchronous actions can increase the throughput of a system if you use such a pattern for I/O operations, but it won’t help with CPU-bound operations.

18. Razor Pages use Layouts as their template engine.  Layouts are searched in specific locations in the web application.  Can you name them?
In the same directory as the calling page, all the way up the directory tree until the root Pages folder.  Also, Pages/Shared and Views/Shared folders.

